<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:vm="clr-namespace:Asana.ViewModel"
                    xmlns:v="clr-namespace:Asana.View"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:local="clr-namespace:Asana">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml">
        </ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml">
        </ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml">
        </ResourceDictionary>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml">
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type Button}" x:Key="WindowControlButtons">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Padding" Value="8"></Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"/>  
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="6" Background="{TemplateBinding Background}">
                        <TextBlock  VerticalAlignment="Center" HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButtons" BasedOn="{StaticResource WindowControlButtons}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Red"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type v:AppView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border > 
                        <!--Padding - 5-->
                        <Grid>
                            <Border x:Name="Container"
                                    Background="#efefef"
                                    CornerRadius="10"/>
                            
                            <Border CornerRadius="15" Background="White">
                                <Border.Effect>
                                    <DropShadowEffect ShadowDepth="0" Opacity="0.6" BlurRadius="5"/>
                                </Border.Effect>
                            </Border>

                            <Grid>
                                <Grid.OpacityMask>
                                    <VisualBrush Visual="{Binding ElementName=Container}"/>
                                </Grid.OpacityMask>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="40"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Grid Grid.Column="0" Panel.ZIndex="1" >
                                    <Grid.ColumnDefinitions>
                                        <!--<ColumnDefinition Width="*"/>-->
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <!--<Viewbox Stretch="Uniform">
                                        <TextBlock Text="Asana"></TextBlock>
                                    </Viewbox>-->
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 5 5 0" >
                                        <Button Command="{Binding MinimizeCommand}" Style="{StaticResource WindowControlButtons}" Content="_"></Button>
                                        <Button Command="{Binding MaximizeCommand}" Style="{StaticResource WindowControlButtons}" Content="[]"></Button>
                                        <Button Command="{Binding CloseCommand}" Style="{StaticResource WindowCloseButtons}" Content="X"></Button>
                                    </StackPanel>
                                </Grid>
                                <!--<Border Grid.Row="1" Height="6" BorderThickness="0 0.2 0 0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                            <GradientStop Color="White" Offset="0.0"/>
                                            <GradientStop Color="#686868" Offset="0.5"/>
                                            <GradientStop Color="White" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>-->
                                <Border Grid.Row="0" Grid.RowSpan="2" Padding="6">
                                    <ContentControl Content="{Binding CurrentViewModel}"/>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Data Templates -->
    <DataTemplate DataType="{x:Type vm:LogInViewModel}">
        <v:LoginView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ConfirmCodeViewModel}">
        <v:ConfirmCodeView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:RegisterEmailViewModel}">
        <v:RegisterEmailView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ForgetPassViewModel}">
        <v:ForgetPassView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:SignUpViewModel}">
        <v:SignUpView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:HomeViewModel}">
        <v:HomeView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:KanbanExamplesViewModel}">
        <v:KanbanExamples/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:CreateProjectViewModel}">
        <v:ProjectsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AccountViewModel}">
        <v:AccountView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ChatViewModel}">
        <v:ChatView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:SendCodeEmailViewModel}">
        <v:SendCodeEmailView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ProjectPageViewModel}">
        <v:ProjectPageView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ListChannelsViewModel}">
        <v:ListChannelsView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:HeaderViewModel}">
        <v:HeaderView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ProjectAddViewModel}">
        <v:ProjectAddView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ChatRoomAddViewModel}">
        <v:ChatRoomAddView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:LodingViewModel}">
        <v:LoadingView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:EditColumnViewModel}">
        <v:EditColumnView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:EditTaskViewModel}">
        <v:EditTaskView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:AssignToNewUserViewModel}">
        <v:AssignToNewUserView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:TaskPageViewModel}">
        <v:TaskPageView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:ProjectViewModel}">
        <v:ProjectView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:EditProjectViewModel}">
        <v:EditProjectView/>
    </DataTemplate>
    <DataTemplate DataType="{x:Type vm:TaskHistoryViewModel}">
        <v:TaskHistoryView/>
    </DataTemplate>

    <Style TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="15" />
    </Style>
    <Style TargetType="{x:Type UserControl}">
        <Setter Property="Background" >
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#c850c0" Offset="0"></GradientStop>
                    <GradientStop Color="#4158d0" Offset="0.9"></GradientStop>
                    <LinearGradientBrush.Transform>
                        <RotateTransform CenterX="60" CenterY="30" Angle="-135" />
                    </LinearGradientBrush.Transform>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        
        
    </Style>

    <!--<UserControl.Background>
           
        </UserControl.Background>-->

</ResourceDictionary>