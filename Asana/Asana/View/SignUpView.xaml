<UserControl x:Class="Asana.View.SignUpView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Asana.View"
             xmlns:asana="clr-namespace:Asana.Model"
             mc:Ignorable="d" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             d:DesignHeight="450" d:DesignWidth="800">
    <!--  Usercontrol Background (Gradient)-->
    <UserControl.Background >
        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="#c850c0" Offset="0"></GradientStop>
            <GradientStop Color="#4158d0" Offset="0.9"></GradientStop>
            <LinearGradientBrush.Transform>
                <RotateTransform CenterX="60" CenterY="30" Angle="-135" />
            </LinearGradientBrush.Transform>
        </LinearGradientBrush>
    </UserControl.Background>


    <!-- Usercontrol Resource   -->
    <UserControl.Resources>

    


        <!-- Style For Textboxes-->
        <Style TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="true">
                            <Border Background="Red" DockPanel.Dock="right" Margin="5,0,0,0" Width="20" Height="20" CornerRadius="10"
                      ToolTip="{Binding ElementName=customAdorner, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}">
                                <TextBlock Text="!" VerticalAlignment="center" HorizontalAlignment="center" FontWeight="Bold" Foreground="white">
                                </TextBlock>
                            </Border>
                            <AdornedElementPlaceholder Name="customAdorner" VerticalAlignment="Center" >
                                <Border BorderBrush="red" BorderThickness="1" />
                            </AdornedElementPlaceholder>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" CornerRadius="7,7,7,7" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                    </ControlTemplate>
                    
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Image resource for BACK button  -->
        <Image x:Key="MyImage" Source="../Resources/Images/CancelIcon.png"/>

        <!-- Style for Buttons -->
        <Style TargetType="Button" >
            <Setter Property="Background" Value="DarkViolet" />
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="7,7,7,7" Background="DarkViolet"    BorderBrush="DarkViolet" BorderThickness="1,1,1,1" >
                            <ContentPresenter x:Name="contentPresenter"   ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding  Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"  Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding  VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>


    <Border HorizontalAlignment="Center" VerticalAlignment="Center"  Background="White" BorderBrush="White"  CornerRadius="8" Height="400"  Width="700" >
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="9*"/>
                <RowDefinition Height="10*"/>
                <RowDefinition Height="9*"/>
                <RowDefinition Height="60*"/>
            </Grid.RowDefinitions>


            <!--   this button is for come back to Home View -->
            <Button Grid.Row="0" ToolTip="Previous Page" Grid.Column="0" BorderBrush="Transparent" Content="{StaticResource MyImage}"
                        Command="{Binding GoToLogInViewCommand}" Background="Transparent" Foreground="White"
                           FontSize="15" Height="40" HorizontalAlignment="Left" VerticalAlignment="Top"/>


            <!--  Header-->
            <TextBlock Grid.Row="1" FontSize="25" FontFamily="Georgia" Margin="10 0 10 0" VerticalAlignment="Center" HorizontalAlignment="Center" Text="Please start by completing your profile"/>

            <!--   login for already existing users-->
            <StackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <Label Content="Already have an account?" Foreground="DarkGray" FontSize="16"/>

                <!--   When this label clicked view replaced with Login View -->
                <Label Content="Log in" Foreground="DodgerBlue" FontSize="16">
                    <Label.Style>
                        <Style TargetType="Label">
                            <Setter Property="Foreground" Value="DodgerBlue"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="Blue"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Label.Style>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown" >
                            <i:InvokeCommandAction Command="{Binding GoToLogInViewCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Label>
            </StackPanel>

            <!--   user info for registration -->
            <Grid Grid.Row="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="50*"/>
                    <RowDefinition Height="50*"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="100*"/>
                    <ColumnDefinition Width="100*"/>
                </Grid.ColumnDefinitions>

                <!-- Full Name-->
                <TextBox Grid.Row="0" Grid.Column="0" Name="FullNameTxtBox"  Margin="10 0 10 0"  BorderThickness="1" TextWrapping="Wrap"
                 Padding="5" TextAlignment="Center" FontSize="20"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="300" Text="{ Binding FullName, UpdateSourceTrigger=PropertyChanged,
                    ValidatesOnDataErrors=true, NotifyOnValidationError=true}" >
                </TextBox>
                <!--  Watermark effect for email textbox-->
                <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" IsHitTestVisible="False" Text="First and Last Name"  Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=FullNameTxtBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <!-- UserName-->
                <TextBox Grid.Row="1" ToolTip="Your name in project" Grid.Column="0" Name="UserNameTxtBox"  Margin="10 0 10 0"  BorderThickness="1" TextWrapping="Wrap"
                 Padding="5" TextAlignment="Center" FontSize="20"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="300" Text="{ Binding UserName, UpdateSourceTrigger=PropertyChanged,
                    ValidatesOnDataErrors=true, NotifyOnValidationError=true}" >
                </TextBox>
                <!--  Watermark effect for Username textbox-->
                <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" IsHitTestVisible="False" Text="UserName"  Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=UserNameTxtBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <!--   Email   -->
                <TextBox Grid.Row="2" Grid.Column="0" Name="EmailTxtBox" Margin="10 0 10 0" IsEnabled="False"  BorderThickness="1" TextWrapping="Wrap"
                 Padding="5" TextAlignment="Center" FontSize="20"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="300" Text="{ Binding Source={x:Static asana:CurrentUser.Instance}, Path=User.Email, UpdateSourceTrigger=PropertyChanged,
                    ValidatesOnDataErrors=true, NotifyOnValidationError=true}"  >
                </TextBox>
                <!--  Watermark effect for email textbox-->
                <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" IsHitTestVisible="False" Text="Email"  Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=EmailTxtBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
             


                <!-- Password  -->
                <TextBox Grid.Row="3" Grid.Column="0" Name="PasswordTxtBox" Margin="10 0 10 0"  BorderThickness="1" TextWrapping="Wrap"
                 Padding="5" TextAlignment="Center" FontSize="20"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="300" Text="{Binding Password, UpdateSourceTrigger=PropertyChanged,
                    ValidatesOnDataErrors=true, NotifyOnValidationError=true}" >
                </TextBox>
                <!--  Watermark effect for email textbox-->
                <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" IsHitTestVisible="False" Text="Password"  Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=PasswordTxtBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>


                <!-- Password Confirmation -->
                <TextBox Grid.Row="3" Grid.Column="1" Name="RePasswordTxtBox" Margin="10 0 10 0"  BorderThickness="1" TextWrapping="Wrap"
                 Padding="5" TextAlignment="Center" FontSize="20"  VerticalAlignment="Center" HorizontalAlignment="Center" Height="40" Width="300" Text="{ Binding RePassword, UpdateSourceTrigger=PropertyChanged,
                    ValidatesOnDataErrors=true, NotifyOnValidationError=true}" >
                </TextBox>
                <!--  Watermark effect for email textbox-->
                <TextBlock Grid.Row="3" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20" IsHitTestVisible="False" Text="Re-Password"  Foreground="DarkGray">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Text, ElementName=RePasswordTxtBox}" Value="">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>

                <!-- SUBMIT-->
                <Button Grid.ColumnSpan="2" Grid.Row="4" Command="{Binding RegisterCommand}" Height="40" Width="250" Content="Continue" FontSize="23" FontWeight="Bold" Foreground="White"/>

                <!-- Profile Image-->               
                <Ellipse Grid.Column="1" Grid.RowSpan="2" Width="110" Height="110">
                    <Ellipse.Fill>
                        <ImageBrush ImageSource="{Binding ProfileImgPath}"  />
                    </Ellipse.Fill>
                </Ellipse>
                
                
                <!--  Load profile image  -->
                <Button Grid.Column="1" Grid.Row="2" Width="100" Height="40" FontSize="15" Foreground="White" FontWeight="Bold" Content="Load Image" Command="{Binding LoadImageCommand}"/>

            </Grid>
        </Grid>
    </Border>
</UserControl>
